AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters: 
  EnvType: 
    Description: Environment type.
    Default: primary
    Type: String
    AllowedValues: 
      - primary
      - secondary
    ConstraintDescription: must specify primary or secondary.

Conditions:
  CreatePrimaryResources: !Equals [ !Ref EnvType, primary ]

Resources:
  LambdaRole:
    Type: "AWS::IAM::Role"
    Condition: CreatePrimaryResources
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: /articles/dynamostreams/
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole
      RoleName: lambda-dynamodb-execution-role
  
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Condition: CreatePrimaryResources
    Properties:
      TableName: dynamostreams.sessionstorage
      AttributeDefinitions:
        -
          AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  
  # HandleMultizoneDynamoDBReplication:
  #   Type: AWS::Serverless::Function
  #   Condition: CreatePrimaryResources
  #   Properties:
  #     Handler: replicator.handler
  #     Runtime: nodejs6.10
  #     Role: !If [CreatePrimaryResources, !GetAtt LambdaRole.Arn, "arn:aws:iam::217509956792:role/lambda-dynamodb-execution-ro-man"]
  #     Events:
  #       Stream:
  #         Type: DynamoDB
  #         Properties:
  #           Stream: !If [CreatePrimaryResources, !GetAtt DynamoDBTable.StreamArn, ""]
  #           BatchSize: 100
  #           StartingPosition: TRIM_HORIZON
